{"version":3,"sources":["../src/index.js"],"names":["TreeView","$element","isEnabled","element","ctx","getContext","height","width","window","innerWidth","baseWidth","landHeight","branches","xPos","yPos","startTime","branchCount","currentStrokeWidth","branchLength","rateOfGrowth","branchSpread","animationRequests","init","proto","prototype","drawScape","drawTree","enable","strokeStyle","beginPath","request","requestAnimationFrame","taperedTrunk","bind","push","branchIndex","timestamp","elapsedTime","endTime","lineWidth","moveTo","Math","random","newX","floor","lineTo","stroke","cancelAllAnimationRequests","splitBranch","i","newBranch","length","cancelAnimationFrame","drawHills","hillWidth","hillWidthHalf","skyHeight","small","med","large","hillHeights","full","relative","midway","fillStyle","strokewidth","j","arc","PI","fillRect","fill","drawCloud","altY","document","getElementById","AnimateIt","theDiv","$","theContainer","maxLeft","maxTop","leftPos","topPos","position","left","removeClass","addClass","animate"],"mappings":"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","file":"src.7ed060e2.js","sourceRoot":"../public","sourcesContent":["/* ARBRE */ \n(function() {\n    'use strict';\n  \n    // Constructor\n    var TreeView = function($element) {\n      this.isEnabled = false;\n      \n      this.element = $element;\n  \n      this.ctx = this.element.getContext('2d');\n  \n      this.element.height = 400;\n  \n      this.element.width = window.innerWidth / 2 > 500 ? window.innerWidth / 2 : 500;\n  \n      this.baseWidth = 20;\n      \n      this.landHeight = 40;\n  \n      this.branches = [{\n        xPos: (this.element.width - this.baseWidth) / 2,\n        yPos: this.element.height - (this.landHeight / 2),\n        startTime: null\n      }];\n  \n      this.branchCount = 1;\n  \n      this.currentStrokeWidth = this.baseWidth;\n  \n      this.branchLength = 250;\n      \n      this.rateOfGrowth = 1;\n      \n      this.branchSpread = 1;\n  \n      this.animationRequests = [];\n  \n      this.init();\n    };\n  \n    var proto = TreeView.prototype;\n  \n    // Top level function\n    proto.init = function() {\n  \n      return this.drawScape()\n        .drawTree()\n        .enable();\n    };\n  \n    proto.enable = function() {\n      if (this.isEnabled) {\n        return this;\n      }\n  \n      this.isEnabled = true;\n  \n      return this;\n    };\n  \n    proto.drawTree = function() {\n      this.ctx.strokeStyle = '#825201';\n      this.ctx.beginPath();\n      var request = window.requestAnimationFrame(this.taperedTrunk.bind(this, 0));\n      this.animationRequests.push(request);\n  \n      return this;\n    };\n  \n    proto.taperedTrunk = function(branchIndex, timestamp) {\n      if (!this.branches[branchIndex].startTime) this.branches[branchIndex].startTime = timestamp;\n      var elapsedTime = timestamp - this.branches[branchIndex].startTime;\n  \n      var endTime = this.baseWidth * this.branchLength;\n  \n      this.ctx.lineWidth = this.currentStrokeWidth - (elapsedTime / endTime) * 8;\n      this.ctx.moveTo(this.branches[branchIndex].xPos, this.branches[branchIndex].yPos);\n  \n      this.branches[branchIndex].yPos -= (Math.random() * this.rateOfGrowth);\n  \n      if (branchIndex === 0 && this.branchCount === 1) {\n        var newX = Math.random() * 0.5;\n        newX *= Math.floor(Math.random() * 2) == 1 ? 1 : -1;\n        this.branches[branchIndex].xPos += newX;\n      } else if (branchIndex < this.branchCount / 2) {\n        this.branches[branchIndex].xPos -= (Math.random() * this.branchSpread);\n      } else if (branchIndex >= this.branchCount / 2) {\n        this.branches[branchIndex].xPos += (Math.random() * this.branchSpread);\n      }\n  \n      this.ctx.lineTo(this.branches[branchIndex].xPos, this.branches[branchIndex].yPos);\n  \n      this.ctx.stroke();\n      if (this.currentStrokeWidth < 0.2 || this.branchCount >= 64) {\n        this.cancelAllAnimationRequests();\n      } else if (elapsedTime >= endTime * (5 / 8)) {\n        this.splitBranch();\n      } else if (elapsedTime < endTime * (5 / 8)) {\n        var request = window.requestAnimationFrame(this.taperedTrunk.bind(this, branchIndex));\n        this.animationRequests.push(request);\n      }\n  \n      return this;\n    };\n  \n    proto.splitBranch = function() {\n      this.cancelAllAnimationRequests();\n  \n      for (var i = 0; i < this.branchCount; i++) {\n        this.branches[i].startTime = null;\n  \n        var newBranch = {\n          xPos: this.branches[i].xPos,\n          yPos: this.branches[i].yPos,\n          startTime: null\n        };\n        this.branches.push(newBranch);\n      }\n  \n      this.branchCount = this.branches.length;\n      this.currentStrokeWidth *= (2 / 3);\n      this.branchLength *= (2 / 3);\n  \n      for (var i = 0; i < this.branchCount; i++) {\n        var request = window.requestAnimationFrame(this.taperedTrunk.bind(this, i));\n        this.animationRequests.push(request);\n      }\n  \n      return this;\n    };\n  \n  \n    proto.cancelAllAnimationRequests = function() {\n      for (var i = 0; i < this.animationRequests.length; i++) {\n        window.cancelAnimationFrame(this.animationRequests[i]);\n      }\n      this.animationRequests = [];\n  \n      return this;\n    };\n    \n    proto.drawScape = function() {\n      return this;   \n    };\n    \n    proto.drawHills = function() {\n      var hillWidth = 70;\n      var hillWidthHalf = hillWidth / 2;\n      var xPos = 20;\n      var skyHeight = this.element.height - this.landHeight;\n      var yPos = skyHeight;\n  \n      // relative heights are the difference between a given hill\n      // and its previous\n      var small, med, large;\n      small = 0.15;\n      med = 0.25;\n      large = 0.7;\n  \n      var hillHeights = [\n        {\n          full: skyHeight * med,\n          relative: -skyHeight * med\n        },{\n          full: (skyHeight * med) + hillWidthHalf,\n          relative: 0\n        },{\n          full: skyHeight * large,\n          relative: -((skyHeight * large) - ((skyHeight * med) + hillWidth))\n        },{\n          full: (skyHeight * large) - hillWidthHalf,\n          relative: ((skyHeight * large) - hillWidthHalf) - ((skyHeight * small) + hillWidthHalf)\n        },{\n          full: skyHeight * small,\n          relative: skyHeight * small\n        }\n      ];\n  \n      var midway = Math.floor(hillHeights.length / 2);\n  \n      this.ctx.fillStyle = '#069611';\n      this.ctx.strokewidth = 2;\n      this.ctx.strokeStyle = '#000';\n      this.ctx.beginPath();\n  \n      for (var i = 0, j = hillHeights.length; i < j; i++) {\n        this.ctx.moveTo(xPos, yPos);\n        if (i <= midway) {\n          // First half\n          yPos += hillHeights[i].relative;\n          this.ctx.lineTo(xPos, yPos);\n          this.ctx.arc(xPos + hillWidthHalf, yPos, hillWidthHalf, Math.PI, 0, false);\n          this.ctx.fillRect(xPos, yPos, hillWidth, hillHeights[i].full);\n        } else {\n          // second half\n          this.ctx.arc(xPos + hillWidthHalf, yPos, hillWidthHalf, Math.PI, 0, false);\n          this.ctx.fillRect(xPos, yPos, hillWidth, hillHeights[i].full);\n        }\n  \n        this.ctx.moveTo(xPos + hillWidthHalf - 5, yPos - (hillWidthHalf / 2) - 4);\n        this.ctx.lineTo(xPos + hillWidthHalf - 5, yPos - (hillWidthHalf / 2) + 4);\n        this.ctx.moveTo(xPos + hillWidthHalf + 5, yPos - (hillWidthHalf / 2) - 4);\n        this.ctx.lineTo(xPos + hillWidthHalf + 5, yPos - (hillWidthHalf / 2) + 4);\n  \n        xPos += hillWidthHalf;\n        \n        if (i < midway) {\n          yPos -= hillWidthHalf;\n        } else if (i === midway) {\n          yPos += hillWidthHalf;\n        } else {\n          xPos += hillWidthHalf;\n          this.ctx.moveTo(xPos, yPos);\n          yPos += hillHeights[i].relative;\n          this.ctx.lineTo(xPos, yPos);\n          xPos -= hillWidthHalf;\n          yPos += hillWidthHalf;\n        }\n      }\n  \n      this.ctx.fill();\n      this.ctx.stroke();\n  \n      return this;\n    };\n    \n    proto.drawCloud = function(xPos, yPos) {\n      this.ctx.fillStyle = 'rgba(255, 255, 255, 0.9';\n      this.ctx.strokewidth = 0;\n      this.ctx.beginPath();\n  \n      for (var i = 0; i < 5; i++) {\n        var altY = i % 2 === 0 ? yPos : yPos - 15;\n        this.ctx.arc(xPos, altY, 20, 0, Math.PI*2, false);\n        xPos += 15;\n      }\n      \n      this.ctx.fill();\n  \n      return this;\n    };\n  \n    return new TreeView(document.getElementById('tree'));\n  \n  })();\n\n\n  /* INSECTE */ \nfunction AnimateIt() {\n    var theDiv = $(\"#insectcontainer\"),\n        theContainer = $(\"#maincontainer\"),\n        maxLeft = theContainer.width() - theDiv.width(),\n        maxTop = theContainer.height() - theDiv.height(),\n        leftPos = Math.floor(Math.random() * maxLeft),\n        topPos = Math.floor(Math.random() * maxTop);\n    \n    if (theDiv.position().left <= leftPos+250) {\n        theDiv.removeClass(\"left\").addClass(\"right\");\n    } else {\n        theDiv.removeClass(\"right\").addClass(\"left\");\n    }\n        \n    theDiv.animate({\n        \"left\": leftPos,\n        \"top\": topPos\n    }, 1200, AnimateIt);\n}\nAnimateIt();"]}